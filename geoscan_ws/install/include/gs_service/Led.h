// Generated by gencpp from file gs_service/Led.msg
// DO NOT EDIT!


#ifndef GS_SERVICE_MESSAGE_LED_H
#define GS_SERVICE_MESSAGE_LED_H

#include <ros/service_traits.h>


#include <gs_service/LedRequest.h>
#include <gs_service/LedResponse.h>


namespace gs_service
{

struct Led
{

typedef LedRequest Request;
typedef LedResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Led
} // namespace gs_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gs_service::Led > {
  static const char* value()
  {
    return "61be35dc5f864469393369c906dab4cc";
  }

  static const char* value(const ::gs_service::Led&) { return value(); }
};

template<>
struct DataType< ::gs_service::Led > {
  static const char* value()
  {
    return "gs_service/Led";
  }

  static const char* value(const ::gs_service::Led&) { return value(); }
};


// service_traits::MD5Sum< ::gs_service::LedRequest> should match 
// service_traits::MD5Sum< ::gs_service::Led > 
template<>
struct MD5Sum< ::gs_service::LedRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Led >::value();
  }
  static const char* value(const ::gs_service::LedRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::LedRequest> should match 
// service_traits::DataType< ::gs_service::Led > 
template<>
struct DataType< ::gs_service::LedRequest>
{
  static const char* value()
  {
    return DataType< ::gs_service::Led >::value();
  }
  static const char* value(const ::gs_service::LedRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gs_service::LedResponse> should match 
// service_traits::MD5Sum< ::gs_service::Led > 
template<>
struct MD5Sum< ::gs_service::LedResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Led >::value();
  }
  static const char* value(const ::gs_service::LedResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::LedResponse> should match 
// service_traits::DataType< ::gs_service::Led > 
template<>
struct DataType< ::gs_service::LedResponse>
{
  static const char* value()
  {
    return DataType< ::gs_service::Led >::value();
  }
  static const char* value(const ::gs_service::LedResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GS_SERVICE_MESSAGE_LED_H
