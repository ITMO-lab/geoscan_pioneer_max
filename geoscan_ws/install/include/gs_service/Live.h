// Generated by gencpp from file gs_service/Live.msg
// DO NOT EDIT!


#ifndef GS_SERVICE_MESSAGE_LIVE_H
#define GS_SERVICE_MESSAGE_LIVE_H

#include <ros/service_traits.h>


#include <gs_service/LiveRequest.h>
#include <gs_service/LiveResponse.h>


namespace gs_service
{

struct Live
{

typedef LiveRequest Request;
typedef LiveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Live
} // namespace gs_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gs_service::Live > {
  static const char* value()
  {
    return "3a1255d4d998bd4d6585c64639b5ee9a";
  }

  static const char* value(const ::gs_service::Live&) { return value(); }
};

template<>
struct DataType< ::gs_service::Live > {
  static const char* value()
  {
    return "gs_service/Live";
  }

  static const char* value(const ::gs_service::Live&) { return value(); }
};


// service_traits::MD5Sum< ::gs_service::LiveRequest> should match 
// service_traits::MD5Sum< ::gs_service::Live > 
template<>
struct MD5Sum< ::gs_service::LiveRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Live >::value();
  }
  static const char* value(const ::gs_service::LiveRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::LiveRequest> should match 
// service_traits::DataType< ::gs_service::Live > 
template<>
struct DataType< ::gs_service::LiveRequest>
{
  static const char* value()
  {
    return DataType< ::gs_service::Live >::value();
  }
  static const char* value(const ::gs_service::LiveRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gs_service::LiveResponse> should match 
// service_traits::MD5Sum< ::gs_service::Live > 
template<>
struct MD5Sum< ::gs_service::LiveResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Live >::value();
  }
  static const char* value(const ::gs_service::LiveResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::LiveResponse> should match 
// service_traits::DataType< ::gs_service::Live > 
template<>
struct DataType< ::gs_service::LiveResponse>
{
  static const char* value()
  {
    return DataType< ::gs_service::Live >::value();
  }
  static const char* value(const ::gs_service::LiveResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GS_SERVICE_MESSAGE_LIVE_H
