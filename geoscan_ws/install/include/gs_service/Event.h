// Generated by gencpp from file gs_service/Event.msg
// DO NOT EDIT!


#ifndef GS_SERVICE_MESSAGE_EVENT_H
#define GS_SERVICE_MESSAGE_EVENT_H

#include <ros/service_traits.h>


#include <gs_service/EventRequest.h>
#include <gs_service/EventResponse.h>


namespace gs_service
{

struct Event
{

typedef EventRequest Request;
typedef EventResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Event
} // namespace gs_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gs_service::Event > {
  static const char* value()
  {
    return "5f4775d9a171b58017f1f8ca79caa3a2";
  }

  static const char* value(const ::gs_service::Event&) { return value(); }
};

template<>
struct DataType< ::gs_service::Event > {
  static const char* value()
  {
    return "gs_service/Event";
  }

  static const char* value(const ::gs_service::Event&) { return value(); }
};


// service_traits::MD5Sum< ::gs_service::EventRequest> should match 
// service_traits::MD5Sum< ::gs_service::Event > 
template<>
struct MD5Sum< ::gs_service::EventRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Event >::value();
  }
  static const char* value(const ::gs_service::EventRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::EventRequest> should match 
// service_traits::DataType< ::gs_service::Event > 
template<>
struct DataType< ::gs_service::EventRequest>
{
  static const char* value()
  {
    return DataType< ::gs_service::Event >::value();
  }
  static const char* value(const ::gs_service::EventRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gs_service::EventResponse> should match 
// service_traits::MD5Sum< ::gs_service::Event > 
template<>
struct MD5Sum< ::gs_service::EventResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Event >::value();
  }
  static const char* value(const ::gs_service::EventResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::EventResponse> should match 
// service_traits::DataType< ::gs_service::Event > 
template<>
struct DataType< ::gs_service::EventResponse>
{
  static const char* value()
  {
    return DataType< ::gs_service::Event >::value();
  }
  static const char* value(const ::gs_service::EventResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GS_SERVICE_MESSAGE_EVENT_H
