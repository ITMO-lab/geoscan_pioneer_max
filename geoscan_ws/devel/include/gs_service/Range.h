// Generated by gencpp from file gs_service/Range.msg
// DO NOT EDIT!


#ifndef GS_SERVICE_MESSAGE_RANGE_H
#define GS_SERVICE_MESSAGE_RANGE_H

#include <ros/service_traits.h>


#include <gs_service/RangeRequest.h>
#include <gs_service/RangeResponse.h>


namespace gs_service
{

struct Range
{

typedef RangeRequest Request;
typedef RangeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Range
} // namespace gs_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gs_service::Range > {
  static const char* value()
  {
    return "22fa633ab47d5522f6597a4b0a3bd94d";
  }

  static const char* value(const ::gs_service::Range&) { return value(); }
};

template<>
struct DataType< ::gs_service::Range > {
  static const char* value()
  {
    return "gs_service/Range";
  }

  static const char* value(const ::gs_service::Range&) { return value(); }
};


// service_traits::MD5Sum< ::gs_service::RangeRequest> should match 
// service_traits::MD5Sum< ::gs_service::Range > 
template<>
struct MD5Sum< ::gs_service::RangeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Range >::value();
  }
  static const char* value(const ::gs_service::RangeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::RangeRequest> should match 
// service_traits::DataType< ::gs_service::Range > 
template<>
struct DataType< ::gs_service::RangeRequest>
{
  static const char* value()
  {
    return DataType< ::gs_service::Range >::value();
  }
  static const char* value(const ::gs_service::RangeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gs_service::RangeResponse> should match 
// service_traits::MD5Sum< ::gs_service::Range > 
template<>
struct MD5Sum< ::gs_service::RangeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Range >::value();
  }
  static const char* value(const ::gs_service::RangeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::RangeResponse> should match 
// service_traits::DataType< ::gs_service::Range > 
template<>
struct DataType< ::gs_service::RangeResponse>
{
  static const char* value()
  {
    return DataType< ::gs_service::Range >::value();
  }
  static const char* value(const ::gs_service::RangeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GS_SERVICE_MESSAGE_RANGE_H
