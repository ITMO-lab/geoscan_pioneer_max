// Generated by gencpp from file gs_service/Time.msg
// DO NOT EDIT!


#ifndef GS_SERVICE_MESSAGE_TIME_H
#define GS_SERVICE_MESSAGE_TIME_H

#include <ros/service_traits.h>


#include <gs_service/TimeRequest.h>
#include <gs_service/TimeResponse.h>


namespace gs_service
{

struct Time
{

typedef TimeRequest Request;
typedef TimeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Time
} // namespace gs_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gs_service::Time > {
  static const char* value()
  {
    return "595a4e99326479146b97bd6237a70ce2";
  }

  static const char* value(const ::gs_service::Time&) { return value(); }
};

template<>
struct DataType< ::gs_service::Time > {
  static const char* value()
  {
    return "gs_service/Time";
  }

  static const char* value(const ::gs_service::Time&) { return value(); }
};


// service_traits::MD5Sum< ::gs_service::TimeRequest> should match 
// service_traits::MD5Sum< ::gs_service::Time > 
template<>
struct MD5Sum< ::gs_service::TimeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Time >::value();
  }
  static const char* value(const ::gs_service::TimeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::TimeRequest> should match 
// service_traits::DataType< ::gs_service::Time > 
template<>
struct DataType< ::gs_service::TimeRequest>
{
  static const char* value()
  {
    return DataType< ::gs_service::Time >::value();
  }
  static const char* value(const ::gs_service::TimeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gs_service::TimeResponse> should match 
// service_traits::MD5Sum< ::gs_service::Time > 
template<>
struct MD5Sum< ::gs_service::TimeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Time >::value();
  }
  static const char* value(const ::gs_service::TimeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::TimeResponse> should match 
// service_traits::DataType< ::gs_service::Time > 
template<>
struct DataType< ::gs_service::TimeResponse>
{
  static const char* value()
  {
    return DataType< ::gs_service::Time >::value();
  }
  static const char* value(const ::gs_service::TimeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GS_SERVICE_MESSAGE_TIME_H
