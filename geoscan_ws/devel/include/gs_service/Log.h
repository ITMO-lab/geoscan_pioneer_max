// Generated by gencpp from file gs_service/Log.msg
// DO NOT EDIT!


#ifndef GS_SERVICE_MESSAGE_LOG_H
#define GS_SERVICE_MESSAGE_LOG_H

#include <ros/service_traits.h>


#include <gs_service/LogRequest.h>
#include <gs_service/LogResponse.h>


namespace gs_service
{

struct Log
{

typedef LogRequest Request;
typedef LogResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Log
} // namespace gs_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gs_service::Log > {
  static const char* value()
  {
    return "52d4db86eb00b72e64733ff4ed17355d";
  }

  static const char* value(const ::gs_service::Log&) { return value(); }
};

template<>
struct DataType< ::gs_service::Log > {
  static const char* value()
  {
    return "gs_service/Log";
  }

  static const char* value(const ::gs_service::Log&) { return value(); }
};


// service_traits::MD5Sum< ::gs_service::LogRequest> should match 
// service_traits::MD5Sum< ::gs_service::Log > 
template<>
struct MD5Sum< ::gs_service::LogRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Log >::value();
  }
  static const char* value(const ::gs_service::LogRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::LogRequest> should match 
// service_traits::DataType< ::gs_service::Log > 
template<>
struct DataType< ::gs_service::LogRequest>
{
  static const char* value()
  {
    return DataType< ::gs_service::Log >::value();
  }
  static const char* value(const ::gs_service::LogRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gs_service::LogResponse> should match 
// service_traits::MD5Sum< ::gs_service::Log > 
template<>
struct MD5Sum< ::gs_service::LogResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Log >::value();
  }
  static const char* value(const ::gs_service::LogResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::LogResponse> should match 
// service_traits::DataType< ::gs_service::Log > 
template<>
struct DataType< ::gs_service::LogResponse>
{
  static const char* value()
  {
    return DataType< ::gs_service::Log >::value();
  }
  static const char* value(const ::gs_service::LogResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GS_SERVICE_MESSAGE_LOG_H
