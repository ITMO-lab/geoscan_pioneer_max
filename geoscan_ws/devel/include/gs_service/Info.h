// Generated by gencpp from file gs_service/Info.msg
// DO NOT EDIT!


#ifndef GS_SERVICE_MESSAGE_INFO_H
#define GS_SERVICE_MESSAGE_INFO_H

#include <ros/service_traits.h>


#include <gs_service/InfoRequest.h>
#include <gs_service/InfoResponse.h>


namespace gs_service
{

struct Info
{

typedef InfoRequest Request;
typedef InfoResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Info
} // namespace gs_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gs_service::Info > {
  static const char* value()
  {
    return "c8470232561560e383557c02344b87f7";
  }

  static const char* value(const ::gs_service::Info&) { return value(); }
};

template<>
struct DataType< ::gs_service::Info > {
  static const char* value()
  {
    return "gs_service/Info";
  }

  static const char* value(const ::gs_service::Info&) { return value(); }
};


// service_traits::MD5Sum< ::gs_service::InfoRequest> should match 
// service_traits::MD5Sum< ::gs_service::Info > 
template<>
struct MD5Sum< ::gs_service::InfoRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Info >::value();
  }
  static const char* value(const ::gs_service::InfoRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::InfoRequest> should match 
// service_traits::DataType< ::gs_service::Info > 
template<>
struct DataType< ::gs_service::InfoRequest>
{
  static const char* value()
  {
    return DataType< ::gs_service::Info >::value();
  }
  static const char* value(const ::gs_service::InfoRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gs_service::InfoResponse> should match 
// service_traits::MD5Sum< ::gs_service::Info > 
template<>
struct MD5Sum< ::gs_service::InfoResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Info >::value();
  }
  static const char* value(const ::gs_service::InfoResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::InfoResponse> should match 
// service_traits::DataType< ::gs_service::Info > 
template<>
struct DataType< ::gs_service::InfoResponse>
{
  static const char* value()
  {
    return DataType< ::gs_service::Info >::value();
  }
  static const char* value(const ::gs_service::InfoResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GS_SERVICE_MESSAGE_INFO_H
