// Generated by gencpp from file gs_service/Ort.msg
// DO NOT EDIT!


#ifndef GS_SERVICE_MESSAGE_ORT_H
#define GS_SERVICE_MESSAGE_ORT_H

#include <ros/service_traits.h>


#include <gs_service/OrtRequest.h>
#include <gs_service/OrtResponse.h>


namespace gs_service
{

struct Ort
{

typedef OrtRequest Request;
typedef OrtResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Ort
} // namespace gs_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gs_service::Ort > {
  static const char* value()
  {
    return "9b3c60a4574eaeb417260f557d541c25";
  }

  static const char* value(const ::gs_service::Ort&) { return value(); }
};

template<>
struct DataType< ::gs_service::Ort > {
  static const char* value()
  {
    return "gs_service/Ort";
  }

  static const char* value(const ::gs_service::Ort&) { return value(); }
};


// service_traits::MD5Sum< ::gs_service::OrtRequest> should match 
// service_traits::MD5Sum< ::gs_service::Ort > 
template<>
struct MD5Sum< ::gs_service::OrtRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Ort >::value();
  }
  static const char* value(const ::gs_service::OrtRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::OrtRequest> should match 
// service_traits::DataType< ::gs_service::Ort > 
template<>
struct DataType< ::gs_service::OrtRequest>
{
  static const char* value()
  {
    return DataType< ::gs_service::Ort >::value();
  }
  static const char* value(const ::gs_service::OrtRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gs_service::OrtResponse> should match 
// service_traits::MD5Sum< ::gs_service::Ort > 
template<>
struct MD5Sum< ::gs_service::OrtResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gs_service::Ort >::value();
  }
  static const char* value(const ::gs_service::OrtResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gs_service::OrtResponse> should match 
// service_traits::DataType< ::gs_service::Ort > 
template<>
struct DataType< ::gs_service::OrtResponse>
{
  static const char* value()
  {
    return DataType< ::gs_service::Ort >::value();
  }
  static const char* value(const ::gs_service::OrtResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GS_SERVICE_MESSAGE_ORT_H
